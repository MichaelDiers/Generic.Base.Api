name: NuGet for Generic.Base.Api.Test.Lib
on:
  push:
    paths:
      - Generic.Base.Api.Test.Lib/**
  workflow_dispatch:
permissions:
  contents: read
  packages: write
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NUGET_GITHUB_TOKEN: ${{ secrets.NUGET_GITHUB_TOKEN }}
      nupkg: Generic.Base.Api.Test.Lib
      push-source: https://nuget.pkg.github.com/MichaelDiers/index.json
      working-directory: Generic.Base.Api.Test.Lib
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: extract old version
      run: echo "OLD_VERSION=$(cat ${{env.CSPROJ}} | grep -Po '<Version>.+?</Version>')" >> $GITHUB_ENV
      env:
        CSPROJ: Generic.Base.Api.Test.Lib/Generic.Base.Api.Test.Lib/Generic.Base.Api.Test.Lib.csproj
    - name: extract major, minor, patch
      run: |
        echo "PATCH_VERSION=$(echo ${OLD_VERSION} | grep -Po '<Version>[0-9]+\.[0-9]+\.\K.*?(?=</Version>)' | awk '{print $0+1}')" >> $GITHUB_ENV
        echo "MAJOR_MINOR_VERSION=$(echo ${OLD_VERSION} | grep -Po '<Version>\K.*?(?=[0-9]+</Version>)')" >> $GITHUB_ENV
    - name: new version
      run: echo "NEW_VERSION='<Version>'${MAJOR_MINOR_VERSION}${PATCH_VERSION}'</Version>'" >> $GITHUB_ENV
    - name: echo
      run: |
        echo ${OLD_VERSION}
        echo ${NEW_VERSION}
    - name: set VERSION variable from tag
      run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
    - name: add package source
      run: |
        dotnet new nugetconfig
        dotnet nuget add source https://nuget.pkg.github.com/MichaelDiers/index.json --name github --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text 
      working-directory: ${{env.working-directory}}
    - name: build
      run: dotnet build --configuration Release /p:Version=${VERSION}
      working-directory: ${{env.working-directory}}
    - name: Test
      run: dotnet test --configuration Release /p:Version=${VERSION} --no-build --filter "TestType=UnitTest"
      working-directory: ${{env.working-directory}}
    - name: Pack
      run: dotnet pack --configuration Release /p:Version=${VERSION} --no-build --output .
      working-directory: ${{env.working-directory}}
    - name: Push
      run: dotnet nuget push ${{env.nupkg}}.${VERSION}.nupkg --source ${{env.push-source}} --api-key ${{ secrets.GITHUB_TOKEN }}
      working-directory: ${{env.working-directory}}
